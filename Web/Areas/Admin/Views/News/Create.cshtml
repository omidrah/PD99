@model ServiceLayer.Models.NewsViewModel

@{
    ViewBag.Title = "افزودن " + Html.DisplayNameFor(m => m);
	 //   Layout = "~/Areas/AdminRoot/Views/Shared/_NLayout.cshtml";
}
<section id="productcreate" class="bg-primary top-buffer" style="color:black">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.ParentId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ParentId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ParentId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NewsTitle, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.NewsTitle, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NewsTitle)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HeadTitle, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.HeadTitle, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HeadTitle)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NewsBody, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewsBody)
                    @Html.ValidationMessageFor(model => model.NewsBody)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsAuthenticated, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsAuthenticated)
                    @Html.ValidationMessageFor(model => model.IsAuthenticated)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("انتخاب عکس", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="col-md-10 col-md-push-1">
                        @Html.Kendo().Upload().Name("PicPath").HtmlAttributes(new { htmlAttributes = new { @class = "form-control" } }).Events(
                                 events => events.Select("onSelect")
                            )
                    </div>
                    @Html.ValidationMessageFor(model => model.MasterPicPathThumb)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="ثبت" class="btn btn-success" />
                    @Html.ActionLink("فهرست", "Index", null, new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
    }
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        function onSelect(e) {
            var result = true;
            var ext = ['.jpeg', '.jpg', '.gif', '.png', '.bmp'];
            if (ext.indexOf(e.files[0].extension) == -1)
                result = false;
            if (!result) {
                showNotification("فرمت فایل انتخاب شده نادرست است", "error", "Center");
                return;
            }
            return result;
        }
    </script>
}