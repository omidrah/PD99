@model IEnumerable<ServiceLayer.Models.OrderViewModel>

@{
    ViewBag.Title = "Index";
    int counter = 1;
}

<section id="Warehouses">
    <div class="row text-center"><h3>سفارشات پرداخت نشده</h3></div>
    <hr />

    @(Html.Kendo().Grid(Model)
     .Name("OrdersGrid").HtmlAttributes(new { style = "height:600px;" })
     .Columns(columns =>
     {
         columns.Template( @<text>      @counter   @{ counter++; }      </text>).Width(70).Title("ردیف");
                 columns.Bound(model => model.OrderID).Width(100);
                 columns.Bound(model => model.OrderDate).HtmlAttributes(new { @class = "Pdate" });
                 columns.Bound(model => model.CustomersName).Title("مشتری");
                 columns.Bound(model => model.OrderSum);
             columns.Bound(item => @item.OrderID).Title("دستورات").Filterable(false).Groupable(false).
                 Template(@<text>
                    @*<a href="#" id="@item.OrderID" class="btn btn-primary print">چاپ</a>
                        @{
                            if (item.Authenticated == false)
                            {
                                <a href="#" id="@item.OrderID" class="btn btn-primary decrease">کسر از موجودی</a>
                            }
                            else
                            {
                                <a href="#" id="@item.OrderID" class="btn btn-primary decrease" disabled="disabled" style="background-color:gray;">کسر از موجودی</a>
                            }
                        }*@
                    @Html.ActionLink("جزییات", "index", "orderDetail", new { id = @item.OrderID }, new { @class = "btn btn-primary" })
                    @* @Html.ActionLink("پرداخت شده", "SetOrderFinlized", "Orders", new { orderID = @item.OrderID }, new { @class = "btn btn-primary" })*@
                    <a href="#" id="@item.OrderID" class="btn btn-primary btnSetOrderFinlized">پرداخت شده</a>
                    <a href="#" id="@item.OrderID" class="btn btn-primary btnDelete">حذف</a>
                </text>).Width(300);
     })
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Action("Index", "Orders").Text("بازگشت به مدیریت سفارشات");
    }
        )
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable()
    .DataSource(dataSource => dataSource
        .Server()
        .PageSize(10)
        .Model(model => model.Id(p => p.OrderID))
    ))
    )
</section>
@section Scripts
{
    @*<script>
            var url = window.location.href;
            var a = url.indexOf("?");
            var b = url.substring(a);
            var c = url.replace(b, "");
            //alert(c);
            url = c;
        </script>*@
    <script type="text/javascript">
        $(".btnSetOrderFinlized").click(function () {
            var curRec = this.id;//get id of record;
            showConfirm("از پرداخت این سفارش مطمئن هستید؟").then(function (stat) {
                if (stat) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("SetOrderFinlized", "Orders")', // we are calling json method
                        dataType: 'json',
                        data: { id: curRec },
                        success: function (states) {
                            if (states) {
                                if (states.codeid == 1) {
                                    $.ajax({
                                        type: 'get',
                                        url: '/Admin/Orders/NotFinalizedOrders',
                                        data: {},
                                        success: function (data) {//rebind grid
                                            window.location.href = '/Admin/Orders/NotFinalizedOrders';
                                            showNotification('عملیات  با موفقیت انجام گردید', 'success', 'center');
                                        }
                                    });
                                }
                                else if (states.codeid == 2) {
                                    showNotification("خطا در عملیات  رکورد", "information", 'center');
                                    return;
                                }
                                else {
                                    showNotification("انجام عملیات امکان پذیر نمی باشد", "information", 'center');
                                    return;
                                }

                            }
                            else {
                                //res = "خطا در حذف";
                            }
                        },
                        error: function (ex) {
                            showNotification('Failed to retrieve states.' + ex, "error", 'center');
                        }
                    })
                }
            });

        });
        $(".btnDelete").click(function () {
            var curRec = this.id;//get id of record;
            showConfirm("از حذف این سفارش مطمئن هستید؟").then(function (stat) {
                if (stat) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Delete", "Orders")', // we are calling json method
                        dataType: 'json',
                        data: { id: curRec },
                        success: function (states) {
                            if (states) {
                                if (states.codeid == 1) {
                                    $.ajax({
                                        type: 'get',
                                        url: '/Admin/Orders/NotFinalizedOrders',
                                        data: {},
                                        success: function (data) {//rebind grid
                                            window.location.href = '/Admin/Orders/NotFinalizedOrders';
                                            showNotification('عملیات  با موفقیت انجام گردید', 'success', 'center');
                                        }
                                    });
                                }
                                else if (states.codeid == 2) {
                                    showNotification("خطا در عملیات  رکورد", "information", 'center');
                                    return;
                                }
                                else {
                                    showNotification("انجام عملیات امکان پذیر نمی باشد", "information", 'center');
                                    return;
                                }

                            }
                            else {
                                res = "خطا در حذف";
                            }
                        },
                        error: function (ex) {
                            showNotification('Failed to retrieve states.' + ex, "error", 'center');
                        }
                    })
                }
            });

        });
    </script>
    @Html.Raw(TempData["res"])
}